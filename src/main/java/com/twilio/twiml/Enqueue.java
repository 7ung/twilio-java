/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

package com.twilio.twiml;

import com.twilio.http.HttpMethod;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlValue;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;

import java.net.URI;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@XmlRootElement(name = "Enqueue")
public class Enqueue extends TwiML {
    @XmlAttribute
    @XmlJavaTypeAdapter(TwiML.ToStringAdapter.class)
    private final URI action;
    @XmlAttribute
    @XmlJavaTypeAdapter(TwiML.ToStringAdapter.class)
    private final HttpMethod method;
    @XmlAttribute
    @XmlJavaTypeAdapter(TwiML.ToStringAdapter.class)
    private final URI waitUrl;
    @XmlAttribute
    @XmlJavaTypeAdapter(TwiML.ToStringAdapter.class)
    private final HttpMethod waitUrlMethod;
    @XmlAttribute
    private final String workflowSid;
    @XmlValue
    private final String name;
    @SuppressWarnings("checkstyle:indentation")
    @XmlElements({@XmlElement(name = "Task", type = Task.class)})
    private final List<TwiML> children;

    private Enqueue() {
        this(new Builder());
    }

    private Enqueue(Builder b) {
        super(b.options);
        this.action = b.action;
        this.method = b.method;
        this.waitUrl = b.waitUrl;
        this.waitUrlMethod = b.waitUrlMethod;
        this.workflowSid = b.workflowSid;
        this.name = b.name;
        this.children = b.children;
    }

    public URI getAction() {
        return action;
    }

    public HttpMethod getMethod() {
        return method;
    }

    public URI getWaitUrl() {
        return waitUrl;
    }

    public HttpMethod getWaitUrlMethod() {
        return waitUrlMethod;
    }

    public String getWorkflowSid() {
        return workflowSid;
    }

    public String getName() {
        return name;
    }

    public List<TwiML> getChildren() {
        return children;
    }

    public static class Builder {
        private URI action;
        private HttpMethod method;
        private URI waitUrl;
        private HttpMethod waitUrlMethod;
        private String workflowSid;
        private String name;
        private Map<String, String> options = new HashMap<>();
        private List<TwiML> children = new ArrayList<>();

        public Builder action(URI action) {
            this.action = action;
            return this;
        }

        public Builder method(HttpMethod method) {
            this.method = method;
            return this;
        }

        public Builder waitUrl(URI waitUrl) {
            this.waitUrl = waitUrl;
            return this;
        }

        public Builder waitUrlMethod(HttpMethod waitUrlMethod) {
            this.waitUrlMethod = waitUrlMethod;
            return this;
        }

        public Builder workflowSid(String workflowSid) {
            this.workflowSid = workflowSid;
            return this;
        }

        public Builder name(String name) {
            this.name = name;
            return this;
        }

        public Builder task(Task task) {
            this.children.add(task);
            return this;
        }

        public Builder option(String key, String value) {
            this.options.put(key, value);
            return this;
        }

        public Enqueue build() {
            return new Enqueue(this);
        }
    }
}